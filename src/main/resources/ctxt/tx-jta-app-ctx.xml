<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- inject property file into String context -->
	<context:property-placeholder location="classpath:spring_db.properties" />
	<context:property-placeholder location="classpath:spring_db2.properties" />
	
	<!-- Create two different data sources -->
	<bean id="dataSourceA" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		  init-method="init" destroy-method="close">
		<property name="uniqueResourceName" value="XADBMSA" />
		<property name="xaDataSourceClassName">
			<value>com.mysql.jdbc.jdbc2.optional.MysqlXADataSource</value>
		</property>
		<property name="xaProperties">
			<props>
				<prop key="databaseName">${jdbc.mysql.url}</prop>
				<prop key="user">${jdbc.mysql.username}</prop>
				<prop key="password">${jdbc.mysql.password}</prop>
			</props>
		</property>
		<property name="poolSize" value="2" />
	</bean>
	
	<bean id="dataSourceB" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		  init-method="init" destroy-method="close">
		<property name="uniqueResourceName" value="XADBMSB" /><!-- Difference here -->
		<property name="xaDataSourceClassName">
			<value>com.mysql.jdbc.jdbc2.optional.MysqlXADataSource</value>
		</property>
		<property name="xaProperties">
			<props>
				<prop key="databaseName">${jdbc.mysql.url2}</prop>
				<prop key="user">${jdbc.mysql.username2}</prop>
				<prop key="password">${jdbc.mysql.password2}</prop>
			</props>
		</property>
		<property name="poolSize" value="2" />
	</bean>

	<!-- Configure Atomikos UserTransactionManager for configure Spring-->
	<bean id="atomikosTxManager" class="com.atomikos.icatch.jta.UserTransactionManager"
		  init-method="init" destroy-method="close">
		<!-- Ending of tx for close() -->
		<property name="forceShutdown" value="true" />	  
	</bean>
	
	<!-- Configure Atomikos UserTransactionImpl for configure Spring -->
	<bean id="atomikosUserTx" class="com.atomikos.icatch.jta.UserTransactionImp">
		<property name="transactionTimeout" value="300"/>
	</bean>
	
	<!-- Configure Spring for using Atomikos Tx -->
	<bean id="txManager" class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager" ref="atomikosTxManager" />
		<property name="userTransaction" ref="atomikosUserTx" />
	</bean>
	
	<tx:annotation-driven transaction-manager="txManager" />

	<!-- Create entity manager factory -->
	<bean id="emfBase"
		  class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" abstract="true">
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="packagesToScan" value="com.alex.spring.entity" />
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.transaction.factory_class">
					com.atomikos.icatch.jta.hibernate3.AtomikosJTATransactionFactory
				</prop>
				<prop key="hibernate.transaction.manager_lookup_class">
					com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup
				</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.max_fetch_depth">3</prop>
				<prop key="hibernate.jdbc.fetch_size">50</prop>
				<prop key="hibernate.jdbc.betch_size">10</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>
	
	<bean id="emfA" parent="emfBase">
		<property name="dataSource" ref="dataSourceA"/>
	</bean>

	<bean id="emfB" parent="emfBase">
		<property name="dataSource" ref="dataSourceB"/>
	</bean>
	
	<context:component-scan base-package="com.alex.spring.service.jta" />
</beans>
